#2023-06-03 02:30
name: 0 - Build - release

on:
  workflow_dispatch:
    inputs:
      upload_artifacts:
        description: Upload also the artifacts
        type: boolean
        required: true
        default: false
  
#  pull_request:
#    paths-ignore:
#      - '.idea/**'
#      - '.gitattributes'
#      - '.github/**.json'
#      - '.gitignore'
#      - '.gitmodules'
#      - '**.md'
#      - 'LICENSE'
#      - 'NOTICE'

env:
  PRG_NAME: "jellyfin-android"
  PRG_VERSION: "v2.5.3"
  TAG_NAME: "jellyfin-android"
  TAG_VERSION: "v2.5.3"
  TAG_BUILD: "-b"
  TAG_REF: "0000000"
  ANDROID_SIGNING_KEY: '${{ secrets.ANDROID_SIGNING_KEY }}'
  #  signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
  #  alias: ${{ secrets.ANDROID_ALIAS }}
  #  keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
  #  keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: deep-soft/checkout@v3

      - name: Get ref, set build version
        shell: bash
        run: |
          _ref_all_=$(git log -1 --format='%H')
          # _ref_=$(echo ${_ref_all_::7})
          _ref_org_=${{ env.TAG_REF }}
          _ref_len_="${#_ref_org_}"
          _ref_=$(echo ${_ref_all_::$_ref_len_})
          echo "TAG_REF=$_ref_" >> $GITHUB_ENV
          _build_=${{ env.TAG_BUILD }}.$_ref_
          echo "TAG_BUILD=$_build_" >> $GITHUB_ENV

      - name: Print ref, build version
        shell: bash
        run: |
          echo "REF: ${{ env.TAG_REF }}
          echo "BLD: ${{ env.TAG_BUILD }}
          echo "${{ env.TAG_NAME }}-${{ env.TAG_BUILD }}" > _tag_name_.txt

#       - name: Create source archive
#         continue-on-error: true
#         shell: bash
#         run: |
#           staging="${{ env.PRG_NAME }}-src-${{ env.PRG_VERSION }}-${{ env.TAG_BUILD }}"
#           touch "$staging.tar.xz"
#           tar --exclude=*.tar* -cv . | xz -9 > "$staging.tar.xz"
#           echo "ASSET_SRC=$staging.tar.xz" >> $GITHUB_ENV
#           if [ "${{ env.DEBUG_LS }}" = "yes" ]; then
#             echo "source archive name: "
#             ls -l "$staging.tar.xz"
#           fi
# 
      - name: Create source archive (zip)
        uses: deep-soft/zip-release@v2
        with:
          type: 'zip'
          filename: "${{ env.PRG_NAME }}-src-${{ env.PRG_VERSION }}-${{ env.TAG_BUILD }}.zip"
          directory: '.'
          path: '.'
          exclusions: '*.git* /*node_modules/* .editorconfig'
          # archive name is ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: print env value
        shell: bash
        run: |
          echo "env.ZIP_RELEASE_ARCHIVE=${{ env.ZIP_RELEASE_ARCHIVE }}"

      - name: Publish src archive
        continue-on-error: true
        uses: deep-soft/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ env.TAG_NAME }}-${{ env.TAG_VERSION }}${{ env.TAG_BUILD }}
          files: |
            ${{ env.ZIP_RELEASE_ARCHIVE }}
            ${{ env.ASSET_SRC }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629 # v2.4.2

      - name: Assemble Release APKs
        run: ./gradlew assembleRelease

      - name: Create publish bundle
        shell: bash
        run: |
          mkdir -p build/gh-app-publish/;
          find app/build/ -iname "*.apk" -exec mv "{}" build/gh-app-publish/ \;

      - name: List artifacts
        shell: bash
        run: |
          ls -l build/gh-app-publish/

      - name: Upload Artifact apk
        if: ${{ inputs.upload_artifacts }}
        continue-on-error: true
        uses: deep-soft/upload-artifact@v3
        with:
          name: upload-artifact-apk
          path: |
            ./build/gh-app-publish/

      - name: Copy apk from outputs/
        continue-on-error: true
        shell: bash
        run: |
          # ./build/app/outputs/flutter-apk/app-release.apk
          set -x
          mkdir -p signed-apk
          echo "LIST: " ./build/gh-app-publish/
          ls -l ./build/gh-app-publish/
          cp ./build/gh-app-publish/jellyfin-android-v0.0.0-dev.1-libre-release-unsigned.apk       ./signed-apk/${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-libre.apk
          cp ./build/gh-app-publish/jellyfin-android-v0.0.0-dev.1-proprietary-release-unsigned.apk ./signed-apk/${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-proprietary.apk
          echo "LIST: " ./signed-apk/
          ls -l ./signed-apk/

      - name: Sign app APK
        uses: deep-soft/sign-android-release-apk@master
        continue-on-error: true
        if: env.ANDROID_SIGNING_KEY != null
        id: sign_apk
        with:
          releaseDir: ./signed-apk
          signingKey: ${{ secrets.ANDROID_SIGNING_KEY }}
          keyAlias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
          buildToolsVersion: 33.0.0

      - name: List ./signed-apk/
        shell: bash
        run: |
          ls -l ./signed-apk/
          echo "signedFile0=" ${{steps.sign_apk.outputs.signedFile0}}
          echo "signedFile1=" ${{steps.sign_apk.outputs.signedFile1}}
          echo "signedFile2=" ${{steps.sign_apk.outputs.signedFile2}}


      - name: Upload Artifact apk
        if: ${{ inputs.upload_artifacts }}
        continue-on-error: true
        uses: deep-soft/upload-artifact@v3
        with:
          name: upload-artifact-apk-signed
          path: |
            ./signed-apk/

      - name: Publish signed apk package
        continue-on-error: true
        if: env.ANDROID_SIGNING_KEY != null
        uses: deep-soft/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ env.TAG_NAME }}
          files: |
            ${{ env.ZIP_RELEASE_ARCHIVE }}
            ./signed-apk/${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-libre-signed.apk
            ./signed-apk/${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-proprietary-signed.apk
            ./signed-apk/*-signed.apk
            _tag_name_.txt
            ${{steps.sign_apk.outputs.signedFile0}}
            ${{steps.sign_apk.outputs.signedFile1}}
            ${{steps.sign_apk.outputs.signedFile2}}

      - name: Publish version build - signed apk package
        continue-on-error: true
        if: env.ANDROID_SIGNING_KEY != null
        uses: deep-soft/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ env.TAG_NAME }}-${{ env.TAG_VERSION }}${{ env.TAG_BUILD }}
          files: |
            ./signed-apk/${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-libre-signed.apk
            ./signed-apk/${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-proprietary-signed.apk
            _tag_name_.txt
            ${{steps.sign_apk.outputs.signedFile0}}
            ${{steps.sign_apk.outputs.signedFile1}}
            ${{steps.sign_apk.outputs.signedFile2}}


      - name: Publish unsigned apk package
        continue-on-error: true
        if: env.ANDROID_SIGNING_KEY == null
        uses: deep-soft/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ env.TAG_NAME }}
          files: |
            ./signed-apk/*.apk
            _tag_name_.txt
